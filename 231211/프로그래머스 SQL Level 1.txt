1. 모든 레코드 조회하기
SELECT * FROM ANIMAL_INS

2. 역순 정렬하기
SELECT NAME, DATETIME FROM ANIMAL_INS ORDER BY ANIMAL_ID DESC

3. 아픈 동물 찾기 
SELECT ANIMAL_ID, NAME FROM ANIMAL_INS
WHERE INTAKE_CONDITION = 'SICK'

4. 어린 동물 찾기
SELECT ANIMAL_ID, NAME FROM ANIMAL_INS
WHERE INTAKE_CONDITION != 'AGED'

5. 이름이 없는 동물의 아이디
SELECT ANIMAL_ID from ANIMAL_INS
where NAME IS NULL

6. 동물의 아이디와 이름
SELECT ANIMAL_ID, NAME  from ANIMAL_INS

7. 여러 기준으로 정렬하기
SELECT ANIMAL_ID, NAME, ANIMAL_TYPE, DATETIME FROM ANIMAL_INS 
ORDER BY NAME, DATETIME DESC

8. 상위 n개 레코드
SELECT NAME FROM ANIMAL_INS
ORDER BY DATETIME LIMIT 1

9. 이름이 있는 동물의 아이디
SELECT ANIMAL_ID FROM ANIMAL_INS
WHERE NAME IS NOT NULL

10. 최댓값 구하기
SELECT MAX(DATETIME) AS 시간 FROM ANIMAL_INS

11. 강원도에 위치한 생산공장 목록 출력하기
SELECT FACTORY_ID, FACTORY_NAME, ADDRESS FROM FOOD_FACTORY
where ADDRESS LIKE '강원도%'
ORDER BY FACTORY_ID ASC

12. 경기도에 위치한 식품창고 목록 출력하기
SELECT WAREHOUSE_ID, WAREHOUSE_NAME, ADDRESS, IFNULL(FREEZER_YN, 'N')
FROM FOOD_WAREHOUSE
WHERE WAREHOUSE_NAME LIKE '%경기%'
ORDER BY WAREHOUSE_ID

13. 나이 정보가 없는 회원 수 구하기
SELECT COUNT(*) AS USERS FROM USER_INFO
WHERE AGE IS NULL

14. 조건에 맞는 회원수 구하기
SELECT count(*) as users from user_info 
where date_format(joined, '%Y') = '2021' and age between 20 and 29

15. 가장 비싼 상품 구하기
SELECT max(price) as MAX_PRICE from product

16. 12세 이하인 여자 환자 목록 출력하기
SELECT PT_NAME, PT_NO, GEND_CD, AGE, IFNULL(TLNO, 'NONE') AS TLNO
FROM PATIENT
WHERE GEND_CD LIKE 'W' AND AGE <= 12
ORDER BY AGE DESC, PT_NAME ASC

17. 흉부외과 또는 일반외과 의사 목록 출력하기
SELECT DR_NAME, DR_ID, MCDP_CD, DATE_FORMAT(HIRE_YMD, '%Y-%m-%d') AS HIRE_YMD
FROM DOCTOR
WHERE MCDP_CD IN ('CS', 'GS')
ORDER BY HIRE_YMD DESC, DR_NAME ASC

18. 인기있는 아이스크림
SELECT FLAVOR FROM FIRST_HALF 
ORDER BY TOTAL_ORDER DESC, SHIPMENT_ID ASC

19. 과일로 만든 아이스크림 고르기
SELECT FLAVOR FROM FIRST_HALF
WHERE TOTAL_ORDER> 3000
AND FLAVOR IN (SELECT FLAVOR
              FROM ICECREAM_INFO
              WHERE INGREDIENT_TYPE= 'fruit_based')
ORDER BY TOTAL_ORDER DESC;

20. 조건에 맞는 도서 리스트 출력하기
SELECT BOOK_ID, DATE_FORMAT(PUBLISHED_DATE, "%Y-%m-%d")  FROM BOOK
where CATEGORY = '인문' and DATE_FORMAT(PUBLISHED_DATE, '%Y') = '2021'
ORDER BY  PUBLISHED_DATE ASC

21. 평균 일일 대여 요금 구하기
SELECT ROUND(AVG(DAILY_FEE)) AS AVERAGE_FEE  FROM CAR_RENTAL_COMPANY_CAR
WHERE CAR_TYPE = 'SUV'

22. 자동차 대여 기록에서 장기/단기 대여 구분하기
# SELECT  HISTORY_ID , CAR_ID, DATE_FORMAT(START_DATE, '%Y-%m-%d') AS START_DATE,
# DATE_FORMAT(END_DATE, '%Y-%m-%d') AS END_DATE FROM CAR_RENTAL_COMPANY_RENTAL_HISTORY

SELECT  HISTORY_ID , CAR_ID, DATE_FORMAT(START_DATE, '%Y-%m-%d') AS START_DATE
, DATE_FORMAT(END_DATE, '%Y-%m-%d') AS END_DATE,
CASE WHEN DATEDIFF(END_DATE,START_DATE) + 1 >= 30 THEN "장기 대여"
ELSE "단기 대여" END AS RENT_TYPE
 FROM  CAR_RENTAL_COMPANY_RENTAL_HISTORY
 WHERE  START_DATE BETWEEN '2022-09-01' AND '2022-09-30'
 ORDER BY  HISTORY_ID DESC

23. 특정 옵션이 포함된 자동차 리스트 구하기
SELECT CAR_ID, CAR_TYPE, DAILY_FEE, OPTIONS FROM CAR_RENTAL_COMPANY_CAR
WHERE OPTIONS LIKE '%네비게이션%'
ORDER BY CAR_ID DESC

24. 조건에 부합하는 중고거래 댓글 조회하기




